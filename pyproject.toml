[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
sources = ["src"]
include = ["src"]

[project]
name = "databricks-labs-remorph"
dynamic = ["version"]
description = 'Code Transpiler and Data Reconcilation tool for Accelerating Data onboarding to Databricks from EDW, CDW and other ETL sources.'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "sqlglot==20.8.0",
  "databricks-labs-blueprint"
]

[project.urls]
Documentation = "https://github.com/databrickslabs/remorph"
Issues = "https://github.com/databrickslabs/remorph/issues"
Source = "https://github.com/databrickslabs/remorph"

[tool.hatch.version]
path = "src/databricks/labs/remorph/__about__.py"

[tool.hatch.envs.default]
python="3.10"

# store virtual env as the child of this folder. Helps VSCode to run better
path = ".venv"

dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-cov>=4.0.0,<5.0.0",
  "black>=23.1.0",
  "ruff>=0.0.243",
  "isort>=2.5.0",
  "databricks-connect",
]
[tool.hatch.envs.default.scripts]
test        = "pytest --cov src --cov-report=xml tests/unit"
coverage    = "pytest --cov src tests/unit --cov-report=html"
integration = "pytest --cov src tests/integration --durations 20"
fmt         = ["isort .",
  "black .",
  "ruff  . --fix"]
verify      = ["black --check .",
  "isort . --check-only",
  "ruff ."]

[tool.isort]
skip_glob = ["notebooks/*.py"]
profile = "black"

[tool.pytest.ini_options]
addopts = "-s -p no:warnings -vv --cache-clear"
cache_dir = ".venv/pytest-cache"

[tool.black]
target-version = ["py310"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
cache-dir = ".venv/ruff-cache"
target-version = "py310"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords and SQL statement construction
  "S105", "S106", "S107", "S603", "S608",
  # Allow print statements
  "T201",
  # Allow asserts
  "S101",
  # Allow standard random generators
  "S311",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore flaky Import block is un-sorted or un-formatted
  "I001",
  # Ignore Exception must not use a string literal, assign to variable first
  "EM101",
  "PLR2004",
]
extend-exclude = [
  "notebooks/*.py"
]

[tool.ruff.isort]
known-first-party = ["databricks.labs.remorph"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]

"tests/**/*" = [
  "PLR2004", "S101", "TID252", # tests can use magic values, assertions, and relative imports
  "ARG001" # tests may not use the provided fixtures
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
omit = ["src/databricks/labs/remorph/reconcile/*", "src/databricks/labs/remorph/helpers/execution_time.py", "__about__.py"]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]